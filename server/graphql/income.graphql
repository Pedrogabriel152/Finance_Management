"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Income {
    id: ID!
    description: String
    establishment: String!
    installments: Int!
    value_installment: Float!
    expires: String!
    installments_received: Int!
    received_income: Boolean!
    user_id: Int!
    created_at: DateTime
    updated_at: DateTime
}

input IncomeInput{
    description: String
    establishment: String!
    installments: Int!
    value_installment: Float!
    expires: String!
    installments_received: Int
    received_income: Boolean
    user_id: Int!
}

interface MessageIncome{
    code: Int!
    message: String! 
}

type MessageResponseIncome implements MessageIncome{
    code: Int!
    message: String!
    income: Income
}

type TotalIncome{
    totalIncome: Int!
    total: Float!
}

extend type Query @guard{
    income(id: ID!, user_id: ID!): MessageResponseIncome! @field(resolver: "App\\GraphQL\\Queries\\IncomeQuery@getIncome")
    incomes(user_id:ID!): [Income]! @paginate(resolver: "App\\GraphQL\\Queries\\IncomeQuery@getIncomes")
    incomesOpen(user_id:ID!): [Income]! @paginate(resolver: "App\\GraphQL\\Queries\\IncomeQuery@getIncomesOpen")
    incomesClose(user_id:ID!): [Income]! @paginate(resolver: "App\\GraphQL\\Queries\\IncomeQuery@getIncomesclose")
    # totalIncomes(user_id: ID!): TotalIncome! @field(resolver: "App\\GraphQL\\Queries\\IncomeQuery@getTotalEIncomes")
}

extend type Mutation @guard{
    createIncome(income: IncomeInput!): MessageResponseIncome! @field(resolver: "App\\GraphQL\\Mutations\\IncomeMutation@createIncome")
    payInstallmentIncome(id: ID!, user_id: ID!): MessageResponseIncome! @field(resolver: "App\\GraphQL\\Mutations\\IncomeMutation@payInstallment")
    editIncome(id:ID!, user_id: ID!, income: IncomeInput!): MessageResponseIncome! @field(resolver: "App\\GraphQL\\Mutations\\IncomeMutation@editIncome")
}

